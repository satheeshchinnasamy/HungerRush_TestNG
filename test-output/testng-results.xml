<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="8" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-06-11T15:38:30 IST" name="HungerRush_POC" finished-at="2021-06-11T15:39:40 IST" duration-ms="70277">
    <groups>
    </groups>
    <test started-at="2021-06-11T15:38:30 IST" name="LoginTest" finished-at="2021-06-11T15:39:40 IST" duration-ms="70277">
      <class name="testCases.HUB_WorkFlow">
        <test-method is-config="true" signature="LaunchBrowser()[pri:0, instance:testCases.HUB_WorkFlow@1ddf84b8]" started-at="2021-06-11T15:38:17 IST" name="LaunchBrowser" finished-at="2021-06-11T15:38:30 IST" duration-ms="13202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LaunchBrowser -->
        <test-method signature="OpentheReportPage()[pri:0, instance:testCases.HUB_WorkFlow@1ddf84b8]" started-at="2021-06-11T15:38:30 IST" name="OpentheReportPage" finished-at="2021-06-11T15:38:35 IST" duration-ms="5084" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpentheReportPage -->
        <test-method is-config="true" signature="Testresult(org.testng.ITestResult)[pri:0, instance:testCases.HUB_WorkFlow@1ddf84b8]" started-at="2021-06-11T15:38:35 IST" name="Testresult" finished-at="2021-06-11T15:38:35 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=OpentheReportPage status=SUCCESS method=HUB_WorkFlow.OpentheReportPage()[pri:0, instance:testCases.HUB_WorkFlow@1ddf84b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Testresult -->
        <test-method signature="SelectSingleStore()[pri:1, instance:testCases.HUB_WorkFlow@1ddf84b8]" started-at="2021-06-11T15:38:35 IST" name="SelectSingleStore" finished-at="2021-06-11T15:38:40 IST" duration-ms="5223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectSingleStore -->
        <test-method is-config="true" signature="Testresult(org.testng.ITestResult)[pri:0, instance:testCases.HUB_WorkFlow@1ddf84b8]" started-at="2021-06-11T15:38:40 IST" name="Testresult" finished-at="2021-06-11T15:38:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectSingleStore status=SUCCESS method=HUB_WorkFlow.SelectSingleStore()[pri:1, instance:testCases.HUB_WorkFlow@1ddf84b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Testresult -->
        <test-method signature="ViewReport()[pri:2, instance:testCases.HUB_WorkFlow@1ddf84b8]" started-at="2021-06-11T15:38:40 IST" name="ViewReport" finished-at="2021-06-11T15:39:11 IST" duration-ms="30523" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=91.0.4472.77)
Build info: version: '4.0.0-beta-3', revision: '5d108f9a67'
System info: host: 'LAPTOP-9C5S4OFR', ip: '192.168.43.177', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ced6defce5e5a2bb4035641b1ab758f4, clickElement {id=51e7fd1e-3978-4513-9024-15f11c5550a9}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 91.0.4472.77, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\SATHEE~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:51776}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:51776/devtoo..., se:cdpVersion: 91.0.4472.77, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (ced6defce5e5a2bb4035641b1ab758f4)] -> id: storesDD]
Session ID: ced6defce5e5a2bb4035641b1ab758f4]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=91.0.4472.77)
Build info: version: '4.0.0-beta-3', revision: '5d108f9a67'
System info: host: 'LAPTOP-9C5S4OFR', ip: '192.168.43.177', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ced6defce5e5a2bb4035641b1ab758f4, clickElement {id=51e7fd1e-3978-4513-9024-15f11c5550a9}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 91.0.4472.77, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\SATHEE~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:51776}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:51776/devtoo..., se:cdpVersion: 91.0.4472.77, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (ced6defce5e5a2bb4035641b1ab758f4)] -> id: storesDD]
Session ID: ced6defce5e5a2bb4035641b1ab758f4
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:198)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:131)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:153)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:128)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:619)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:237)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:75)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy17.click(Unknown Source)
at page_Objects.Reports_Page.ViewReport(Reports_Page.java:44)
at testCases.HUB_WorkFlow.ViewReport(HUB_WorkFlow.java:55)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ViewReport -->
        <test-method is-config="true" signature="Testresult(org.testng.ITestResult)[pri:0, instance:testCases.HUB_WorkFlow@1ddf84b8]" started-at="2021-06-11T15:39:11 IST" name="Testresult" finished-at="2021-06-11T15:39:11 IST" duration-ms="433" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ViewReport status=FAILURE method=HUB_WorkFlow.ViewReport()[pri:2, instance:testCases.HUB_WorkFlow@1ddf84b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Testresult -->
        <test-method signature="Manage()[pri:3, instance:testCases.HUB_WorkFlow@1ddf84b8]" started-at="2021-06-11T15:39:11 IST" name="Manage" finished-at="2021-06-11T15:39:19 IST" duration-ms="7613" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Manage -->
        <test-method is-config="true" signature="Testresult(org.testng.ITestResult)[pri:0, instance:testCases.HUB_WorkFlow@1ddf84b8]" started-at="2021-06-11T15:39:19 IST" name="Testresult" finished-at="2021-06-11T15:39:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Manage status=SUCCESS method=HUB_WorkFlow.Manage()[pri:3, instance:testCases.HUB_WorkFlow@1ddf84b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Testresult -->
        <test-method signature="Communicate()[pri:6, instance:testCases.HUB_WorkFlow@1ddf84b8]" started-at="2021-06-11T15:39:19 IST" name="Communicate" finished-at="2021-06-11T15:39:20 IST" duration-ms="1587" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Communicate -->
        <test-method is-config="true" signature="Testresult(org.testng.ITestResult)[pri:0, instance:testCases.HUB_WorkFlow@1ddf84b8]" started-at="2021-06-11T15:39:20 IST" name="Testresult" finished-at="2021-06-11T15:39:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Communicate status=SUCCESS method=HUB_WorkFlow.Communicate()[pri:6, instance:testCases.HUB_WorkFlow@1ddf84b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Testresult -->
        <test-method signature="People()[pri:7, instance:testCases.HUB_WorkFlow@1ddf84b8]" started-at="2021-06-11T15:39:20 IST" name="People" finished-at="2021-06-11T15:39:24 IST" duration-ms="3620" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- People -->
        <test-method is-config="true" signature="Testresult(org.testng.ITestResult)[pri:0, instance:testCases.HUB_WorkFlow@1ddf84b8]" started-at="2021-06-11T15:39:24 IST" name="Testresult" finished-at="2021-06-11T15:39:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=People status=SUCCESS method=HUB_WorkFlow.People()[pri:7, instance:testCases.HUB_WorkFlow@1ddf84b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Testresult -->
        <test-method signature="Inventory()[pri:8, instance:testCases.HUB_WorkFlow@1ddf84b8]" started-at="2021-06-11T15:39:24 IST" name="Inventory" finished-at="2021-06-11T15:39:26 IST" duration-ms="2018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Inventory -->
        <test-method is-config="true" signature="Testresult(org.testng.ITestResult)[pri:0, instance:testCases.HUB_WorkFlow@1ddf84b8]" started-at="2021-06-11T15:39:26 IST" name="Testresult" finished-at="2021-06-11T15:39:26 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Inventory status=SUCCESS method=HUB_WorkFlow.Inventory()[pri:8, instance:testCases.HUB_WorkFlow@1ddf84b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Testresult -->
        <test-method signature="Display()[pri:9, instance:testCases.HUB_WorkFlow@1ddf84b8]" started-at="2021-06-11T15:39:26 IST" name="Display" finished-at="2021-06-11T15:39:35 IST" duration-ms="9431" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Display -->
        <test-method is-config="true" signature="Testresult(org.testng.ITestResult)[pri:0, instance:testCases.HUB_WorkFlow@1ddf84b8]" started-at="2021-06-11T15:39:35 IST" name="Testresult" finished-at="2021-06-11T15:39:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Display status=SUCCESS method=HUB_WorkFlow.Display()[pri:9, instance:testCases.HUB_WorkFlow@1ddf84b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Testresult -->
        <test-method signature="HungerRushOnly()[pri:9, instance:testCases.HUB_WorkFlow@1ddf84b8]" started-at="2021-06-11T15:39:35 IST" name="HungerRushOnly" finished-at="2021-06-11T15:39:40 IST" duration-ms="4206" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [ Reds Pizza] but found [Reds Pizza]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [ Reds Pizza] but found [Reds Pizza]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at testCases.HUB_WorkFlow.HungerRushOnly(HUB_WorkFlow.java:168)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HungerRushOnly -->
        <test-method is-config="true" signature="Testresult(org.testng.ITestResult)[pri:0, instance:testCases.HUB_WorkFlow@1ddf84b8]" started-at="2021-06-11T15:39:40 IST" name="Testresult" finished-at="2021-06-11T15:39:40 IST" duration-ms="219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=HungerRushOnly status=FAILURE method=HUB_WorkFlow.HungerRushOnly()[pri:9, instance:testCases.HUB_WorkFlow@1ddf84b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Testresult -->
        <test-method signature="SiteDesigner()[pri:10, instance:testCases.HUB_WorkFlow@1ddf84b8]" started-at="2021-06-11T15:39:40 IST" name="SiteDesigner" finished-at="2021-06-11T15:39:40 IST" duration-ms="201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SiteDesigner -->
        <test-method is-config="true" signature="Testresult(org.testng.ITestResult)[pri:0, instance:testCases.HUB_WorkFlow@1ddf84b8]" started-at="2021-06-11T15:39:40 IST" name="Testresult" finished-at="2021-06-11T15:39:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SiteDesigner status=SUCCESS method=HUB_WorkFlow.SiteDesigner()[pri:10, instance:testCases.HUB_WorkFlow@1ddf84b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Testresult -->
        <test-method is-config="true" signature="TearDown()[pri:0, instance:testCases.HUB_WorkFlow@1ddf84b8]" started-at="2021-06-11T15:39:40 IST" name="TearDown" finished-at="2021-06-11T15:39:41 IST" duration-ms="981" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
      </class> <!-- testCases.HUB_WorkFlow -->
    </test> <!-- LoginTest -->
  </suite> <!-- HungerRush_POC -->
</testng-results>
